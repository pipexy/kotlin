version: '3.8'

services:
  decoder:
    build: 
      context: ./services/decoder
      dockerfile: Dockerfile
    ports:
      - "${DECODER_PORT}:${DECODER_PORT}"
    volumes:
      - ./models:/models
      - ./config:/config
    env_file: .env

  encoder:
    build:
      context: ./services/encoder
      dockerfile: Dockerfile
    ports:
      - "${ENCODER_PORT}:${ENCODER_PORT}"
    volumes:
      - ./config:/config
    env_file: .env

  scaler:
    build:
      context: ./services/scaler
      dockerfile: Dockerfile
    ports:
      - "${SCALER_PORT}:${SCALER_PORT}"
    volumes:
      - ./config:/config
    env_file: .env

  motion:
    build:
      context: ./services/motion
      dockerfile: Dockerfile
    ports:
      - "${MOTION_PORT}:${MOTION_PORT}"
    volumes:
      - ./models:/models
      - ./config:/config
    env_file: .env

  object:
    build:
      context: ./services/object
      dockerfile: Dockerfile
    ports:
      - "${OBJECT_PORT}:${OBJECT_PORT}"
    volumes:
      - ./models:/models
      - ./config:/config
    env_file: .env

  audio:
    build:
      context: ./services/audio
      dockerfile: Dockerfile
    ports:
      - "${AUDIO_PORT}:${AUDIO_PORT}"
    volumes:
      - ./models:/models
      - ./config:/config
    env_file: .env

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "${PROMETHEUS_PORT}:${PROMETHEUS_PORT}"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "${GRAFANA_PORT}:${GRAFANA_PORT}"
    volumes:
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin

networks:
  default:
    name: pipexy-network
