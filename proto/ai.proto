syntax = "proto3";

package pipexy.ai;

import "common.proto";
import "video.proto";

message DetectedObject {
  string class_name = 1;
  float confidence = 2;
  pipexy.common.Rectangle bbox = 3;
}

message DetectedMotion {
  pipexy.common.Rectangle region = 1;
  float magnitude = 2;
  pipexy.common.Point direction = 3;
}

message ObjectDetectionRequest {
  pipexy.video.VideoFrame frame = 1;
  float confidence_threshold = 2;
  repeated string class_filter = 3;
}

message ObjectDetectionResponse {
  pipexy.common.Status status = 1;
  repeated DetectedObject objects = 2;
}

message MotionDetectionRequest {
  pipexy.video.VideoFrame frame = 1;
  float sensitivity = 2;
  int32 min_area = 3;
}

message MotionDetectionResponse {
  pipexy.common.Status status = 1;
  repeated DetectedMotion motions = 2;
}

message TrackingObject {
  string tracking_id = 1;
  DetectedObject object = 2;
  repeated pipexy.common.Point trajectory = 3;
}

message ObjectTrackingRequest {
  pipexy.video.VideoFrame frame = 1;
  repeated string active_tracking_ids = 2;
}

message ObjectTrackingResponse {
  pipexy.common.Status status = 1;
  repeated TrackingObject tracked_objects = 2;
}

service ObjectDetectionService {
  rpc DetectObjects(ObjectDetectionRequest) returns (ObjectDetectionResponse);
  rpc DetectObjectsStream(stream ObjectDetectionRequest) returns (stream ObjectDetectionResponse);
}

service MotionDetectionService {
  rpc DetectMotion(MotionDetectionRequest) returns (MotionDetectionResponse);
  rpc DetectMotionStream(stream MotionDetectionRequest) returns (stream MotionDetectionResponse);
  rpc TrackObjects(ObjectTrackingRequest) returns (ObjectTrackingResponse);
  rpc TrackObjectsStream(stream ObjectTrackingRequest) returns (stream ObjectTrackingResponse);
}
